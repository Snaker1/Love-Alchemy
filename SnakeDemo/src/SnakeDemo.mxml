<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="vertical" xmlns:local="*"
	creationComplete="onCreationComplete()"
	>
	<mx:Script>
	<![CDATA[
	import mx.controls.Alert;
	import luaAlchemy.LuaAlchemy;

	// Extra imports to expose stuff to Lua
	import mx.containers.*;
	import mx.controls.*;
	import flash.events.Event;
	import flash.events.KeyboardEvent;
	import flash.events.MouseEvent;
	private var lua:LuaAlchemy;
	private var luaCanvas:FocusableCanvas;


	private function onCreationComplete():void
	{
		LuaAssets.init();
		lua = new LuaAlchemy();
		luaCanvas = new FocusableCanvas();
		addChild(luaCanvas);
		focusManager.setFocus(luaCanvas);
		lua.setGlobal("canvas", luaCanvas);
		lua.setGlobal("stage", luaCanvas);
		lua.doFile("love.lua");
		lua.doFile("main.lua");
		var stack:Array = lua.doString("love.run()")
		if (stack.shift() == false)
		{
		  Alert.show(
			  stack.join("\n") + "\n",
			  "Lua error",
			  mx.controls.Alert.OK
			);
		}
	  }

	// TODO: Make this code reusable
	/**
	* When you compile in the Flex library statically, the linker only includes
	* classes you are actually using.  Only the classes used would be available
	* for the Lua script to create.  So to ensure the script has access to the
	* classes I wanted to create, I declared one of them so it would be included.
	*/
	private function importClassesForLua():void
	{
		var canvas:Canvas
		var image:Image
		var label:Label
		var text:Text
		var timer:Timer
		}
	]]>
	</mx:Script>
</mx:Application>
